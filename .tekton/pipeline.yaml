apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: orders-cd-pipeline
spec:
  params:
    - description: The URL to the git repo
      name: GIT_REPO
      type: string
    - default: master
      description: The reference (branch or ref)
      name: GIT_REF
      type: string
    - default: "-vvv --processes=1 --run-coverage --minimum-coverage=95"
      description: Arguments for green testing
      name: GREEN_ARGS
      type: string
  tasks:
    - name: git-clone
      params:
        - name: url
          value: $(params.GIT_REPO)
        - name: revision
          value: $(params.GIT_REF)
        - name: refspec
          value: ""
        - name: submodules
          value: "false"
        - name: depth
          value: "1"
        - name: sslVerify
          value: "true"
        - name: crtFileName
          value: ca-bundle.crt
        - name: subdirectory
          value: ""
        - name: sparseCheckoutDirectories
          value: ""
        - name: deleteExisting
          value: "true"
        - name: httpProxy
          value: ""
        - name: httpsProxy
          value: ""
        - name: noProxy
          value: ""
        - name: verbose
          value: "true"
        - name: gitInitImage
          value: >-
            registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:c4b2183f7c7997bd401d86b33eefb637b3ef2fa90618e875106292cd69a15c14
        - name: userHome
          value: /home/git
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: pipeline-workspace
    - name: pylint
      params:
        - name: image
          value: "docker.io/python:3.11-slim"
        - name: path
          value: service
        - name: requirements_file
          value: requirements.txt
        - name: args
          value: []
        - name: pip_conf_file
          value: pip.conf
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: pylint
      workspaces:
        - name: source
          workspace: pipeline-workspace
    - name: testing
      params:
        - name: ARGS
          value: $(params.GREEN_ARGS)
        - name: SECRET_NAME
          value: postgres-creds
        - name: SECRET_KEY
          value: uri
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: green
      workspaces:
        - name: source
          workspace: pipeline-workspace
  workspaces:
    - name: pipeline-workspace
